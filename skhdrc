# Navigation

# Focus West: Focus window to the west or next space or west display
lalt - j: yabai -m window --focus west || yabai -m space --focus next || yabai -m display --focus west

# Focus South: Focus window to the south or south display
lalt - k: yabai -m window --focus south || yabai -m display --focus south

# Focus North: Focus window to the north or north display
lalt - i: yabai -m window --focus north || yabai -m display --focus north

# Focus East: Focus window to the east or previous space or east display
lalt - l: yabai -m window --focus east || yabai -m space --focus prev || yabai -m display --focus east 

# Switch to next/previous space

# Next Space: Focus on the next space
lalt - p : yabai -m space --focus next

# Move to Next & Focus: Move window to next space and keep focus on it
lalt - o : window_id=$(yabai -m query --windows --window | jq -r '.id') && yabai -m window --space next && yabai -m space --focus next && yabai -m window --focus ${window_id}

# Previous Space: Focus on the previous space
lalt - y : yabai -m space --focus prev

# Move to Previous & Focus: Move window to previous space and keep focus on it
lalt - u : window_id=$(yabai -m query --windows --window | jq -r '.id') && yabai -m window --space prev && yabai -m space --focus prev && yabai -m window --focus ${window_id}

# Smart Move: Move window to empty space or create new space when needed
lalt - m: sh -c 'current_space=$(yabai -m query --windows --window | jq -r ".space") && windows_in_space=$(yabai -m query --windows | jq -r ".[] | select(.space == $current_space) | .id" | wc -l); if [ $windows_in_space -gt 1 ]; then empty_space=$(yabai -m query --spaces | jq -r ".[] | select(.windows | length == 0) | .index" | head -n 1); if [ ! -z "$empty_space" ]; then yabai -m window --space $empty_space && yabai -m space --focus $empty_space && yabai -m window --focus first; else yabai -m space --create && new_space=$(yabai -m query --spaces | jq -r ".[] | select(.windows | length == 0) | .index" | head -n 1) && yabai -m window --space $new_space && yabai -m space --focus $new_space && yabai -m window --focus first; fi; fi'

# Create Space: Create a new space
lalt - n : yabai -m space --create

# Destroy Space: Delete current space
lalt - x : yabai -m space --destroy

# Clean Spaces: Close all empty spaces
lalt - q : yabai -m query --spaces | jq '.[] | select(.windows | length == 0) | .index' | xargs -I {} yabai -m space {} --destroy

# Balance Windows: Equalize size of windows in current space
lalt - b : yabai -m space --balance

# Rotate Space: Rotate windows in current space by 90 degrees
lalt - r : yabai -m space --rotate 90 && yabai -m space --balance

# Toggle Float: Toggle floating mode for current window
lalt - f: \
    yabai -m window --toggle float; \
    yabai -m window --toggle border

# Zoom Fullscreen: Make window fullscreen within its space
lalt + lshift - f  : yabai -m window --toggle zoom-fullscreen

# Native Fullscreen: Toggle macOS native fullscreen
lalt + lcmd + lshift - f   : yabai -m window --toggle native-fullscreen

# Toggle Layout: Switch between bsp and float layout
lshift + lalt - l : yabai -m config layout | grep 'bsp' && yabai -m config layout float || yabai -m config layout bsp
